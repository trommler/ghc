variables:
  GIT_SSL_NO_VERIFY: "1"

  # Commit of ghc/ci-images repository from which to pull Docker images
  DOCKER_REV: 408eff66aef6ca2b44446c694c5a56d6ca0460cc

  # Sequential version number capturing the versions of all tools fetched by
  # .gitlab/ci.sh.
  WINDOWS_TOOLCHAIN_VERSION: 1

  # Disable shallow clones; they break our linting rules
  GIT_DEPTH: 0

  # Overridden by individual jobs
  CONFIGURE_ARGS: ""

  GIT_SUBMODULE_STRATEGY: "recursive"

stages:
  - full-build  # Build all the things
#  - cleanup     # See Note [Cleanup after the shell executor]
#  - packaging   # Source distribution, etc.

# N.B.Don't run on wip/ branches, instead on run on merge requests.
.only-default: &only-default
  only:
    - master
    - /ghc-[0-9]+\.[0-9]+/
    - merge_requests
    - tags
    - web

.nightly: &nightly
  only:
    variables:
      - $NIGHTLY
  artifacts:
    when: always
    expire_in: 8 weeks

.release: &release
  variables:
    BUILD_FLAVOUR: "perf"
    FLAVOUR: "perf"
  artifacts:
    when: always
    expire_in: 1 year
  only:
    - tags

############################################################
# Runner Tags
############################################################
#
# * x86_64-linux: Any Docker-capable x86_64 Linux machine
# * aarch64-linux: Any Docker-capable AArch64 Linux machine
# * x86_64-windows: A x86_64 Windows machine
# * lint: Any Docker-capable x86_64 Linux machine; distinct from
#         x86_64-linux to ensure low-latency availability.
#


############################################################
# Validation via Pipelines (make)
############################################################

.validate:
  <<: *only-default
  variables:
    TEST_TYPE: test
    MAKE_ARGS: "-Werror"
  script:
    - .gitlab/ci.sh configure
    - .gitlab/ci.sh build_make
    - .gitlab/ci.sh test_make
  dependencies: []
  artifacts:
    reports:
      junit: junit.xml
    expire_in: 2 week
    paths:
      - $BIN_DIST_PREP_TAR_COMP
      - junit.xml
      - performance-metrics.tsv

#################################
# powerpc64le-linux
#################################
.build-powerpc64le-linux:
  extends: .validate
  tags:
    - ppc64le-linux
  allow_failure: false
  variables:
    BUILD_FLAVOUR: "validate"
  artifacts:
    when: always
    expire_in: 2 week

master-powerpc64le-linux:
  <<: *nightly
  extends: .build-powerpc64le-linux
  stage: full-build

